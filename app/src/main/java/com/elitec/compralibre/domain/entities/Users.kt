package io.appwrite.models

import java.time.Instant

/**
 * This file is auto-generated by the Appwrite CLI. 
 * You can regenerate it by running `appwrite types -l kotlin E:\Proyectos\Frondend\Multiplataforma (Flutter)\Apiario\Pregonero`.
 */

data class Users(
    val uid: String,
    val email: String?,
    val password: String,
    val displayName: String?,
    val photoUrl: String?,
    val role: String,
    val createdAt: String
) {
    companion object {
        fun fromDocument(document: Document<Map<String, Any>>): Users {
            return Users(
                uid = document.data["uid"] as String,
                email = document.data["email"] as? String,
                displayName = document.data["displayName"] as? String,
                photoUrl = document.data["photoUrl"] as? String,
                role = document.data["role"] as? String ?: "CUSTOM_USER",
                createdAt = document.data["createdAt"] as String,
                password = document.data["password"] as String
            )
        }
    }

    fun toDocumentData(): Map<String, Any?> {
        return mapOf(
            "uid" to uid,
            "email" to email,
            "displayName" to displayName,
            "photoUrl" to photoUrl,
            "role" to role,
            "createdAt" to createdAt,
            "password" to password
        )
    }
}

fun Long.toIso8601(): String {
    return Instant.ofEpochMilli(this).toString()
}

fun String.toLongTimestamp(): Long {
    return try {
        Instant.parse(this).toEpochMilli()
    } catch (e: Exception) {
        System.currentTimeMillis()
    }
}